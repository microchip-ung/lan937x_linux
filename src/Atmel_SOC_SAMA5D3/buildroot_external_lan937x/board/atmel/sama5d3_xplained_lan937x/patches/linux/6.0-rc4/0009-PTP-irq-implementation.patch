From f0dfb03346297dd8099cf0a8fca21c8bba87ed9e Mon Sep 17 00:00:00 2001
From: Rakesh Sankaranarayanan <rakesh.sankaranarayanan@microchip.com>
Date: Mon, 26 Sep 2022 15:25:18 +0530
Subject: [PATCH 09/15] PTP irq implementation

irq added for PTP based new Trafford implementation.

Signed-off-by: Rakesh Sankaranarayanan <rakesh.sankaranarayanan@microchip.com>
---
 drivers/net/dsa/microchip/ksz_common.c   |  5 ++
 drivers/net/dsa/microchip/ksz_common.h   |  2 +
 drivers/net/dsa/microchip/lan937x_main.c | 66 ++++++++++++++++++++++++
 drivers/net/dsa/microchip/lan937x_ptp.c  |  2 +
 drivers/net/dsa/microchip/lan937x_reg.h  |  1 +
 5 files changed, 76 insertions(+)

diff --git a/drivers/net/dsa/microchip/ksz_common.c b/drivers/net/dsa/microchip/ksz_common.c
index 2445718b1d86..235df4c3efaa 100644
--- a/drivers/net/dsa/microchip/ksz_common.c
+++ b/drivers/net/dsa/microchip/ksz_common.c
@@ -28,6 +28,7 @@
 #include "lan937x_tc.h"
 #include "lan937x_flower.h"
 #include "lan937x_reg.h"
+#include "lan937x_ptp.h"
 
 #define MIB_COUNTER_NUM 0x20
 
@@ -2622,6 +2623,10 @@ static const struct dsa_switch_ops ksz_switch_ops = {
 	.get_eth_ctrl_stats     = lan937x_get_eth_ctrl_stats,
 	.get_eth_mac_stats      = lan937x_get_eth_mac_stats,
 	.get_eth_phy_stats      = lan937x_get_eth_phy_stats,
+	.get_ts_info            = lan937x_get_ts_info,
+	.port_txtstamp		= lan937x_port_txtstamp,
+	.port_hwtstamp_set      = lan937x_hwtstamp_set,
+	.port_hwtstamp_get      = lan937x_hwtstamp_get
 };
 
 struct ksz_device *ksz_switch_alloc(struct device *base, void *priv)
diff --git a/drivers/net/dsa/microchip/ksz_common.h b/drivers/net/dsa/microchip/ksz_common.h
index 59ba71acdff6..ab2e6e5cc498 100644
--- a/drivers/net/dsa/microchip/ksz_common.h
+++ b/drivers/net/dsa/microchip/ksz_common.h
@@ -107,6 +107,7 @@ struct ksz_port {
 	void * priv;
 
 #if IS_ENABLED(CONFIG_NET_DSA_MICROCHIP_LAN937X_PTP)
+	char ptp_dev_name[16];
        bool hwts_tx_en;
         struct lan937x_port_ptp_shared ptp_shared;
         ktime_t tstamp_sync;
@@ -159,6 +160,7 @@ struct ksz_device {
 	struct mutex lock_irq;		/* IRQ Access */
 	struct ksz_irq girq;
 	u16 cut_through_enable;
+	int ptp_irq[PHY_MAX_ADDR];
 #if IS_ENABLED(CONFIG_NET_DSA_MICROCHIP_LAN937X_PTP)
        struct ptp_clock_info ptp_caps;
        struct ptp_clock *ptp_clock;
diff --git a/drivers/net/dsa/microchip/lan937x_main.c b/drivers/net/dsa/microchip/lan937x_main.c
index 5bd5e511c98b..3643c7930078 100644
--- a/drivers/net/dsa/microchip/lan937x_main.c
+++ b/drivers/net/dsa/microchip/lan937x_main.c
@@ -264,6 +264,65 @@ static int lan937x_sw_mdio_write(struct mii_bus *bus, int addr, int regnum,
 	return lan937x_internal_phy_write(dev, addr, regnum, val);
 }
 
+static irqreturn_t lan937x_ptp_thread_fn(int irq, void *dev_id)
+{
+	struct ksz_port *port = dev_id;
+	irqreturn_t ret = IRQ_NONE;
+	struct ksz_device *dev;
+
+	dev = port->ksz_dev;
+
+	if (lan937x_ptp_port_interrupt(dev, port->num) != IRQ_NONE)
+		ret = IRQ_HANDLED;
+
+	return ret;
+}
+
+static void lan937x_irq_ptp_free(struct ksz_device *dev, int cnt)
+{
+	struct dsa_switch *ds = dev->ds;
+	int ptp;
+
+	for (ptp = 0; ptp < cnt; ptp++)
+		if (BIT(ptp) & ds->phys_mii_mask)
+			irq_dispose_mapping(dev->ptp_irq[ptp]);
+}
+
+static int lan937x_irq_ptp_setup(struct ksz_device *dev)
+{
+	struct dsa_switch *ds = dev->ds;
+	struct ksz_port *port;
+	int ret = 0;
+	int ptp;
+	int irq;
+
+	for (ptp = 0; ptp < KSZ_MAX_NUM_PORTS; ptp++) {
+		if (BIT(ptp) & ds->phys_mii_mask) {
+			irq = irq_find_mapping(dev->ports[ptp].pirq.domain,
+					       PORT_SRC_PTP_INT);
+			if (irq < 0)
+				goto out;
+
+			dev->ptp_irq[ptp] = irq;
+			port = &dev->ports[ptp];
+
+			ret = request_threaded_irq(irq, NULL, lan937x_ptp_thread_fn,
+						   IRQF_ONESHOT | IRQF_TRIGGER_FALLING,
+						   port->ptp_dev_name, port);
+			if (ret)
+				goto out;
+		}
+	}
+
+	return ret;
+
+out:
+	ret = irq;
+	lan937x_irq_ptp_free(dev, ptp);
+
+	return ret;
+}
+
 static int lan937x_irq_phy_setup(struct ksz_device *dev)
 {
 	struct dsa_switch *ds = dev->ds;
@@ -927,6 +986,10 @@ int lan937x_setup(struct dsa_switch *ds)
         if (ret)
                 return ret;
 
+	ret = lan937x_irq_ptp_setup(dev);
+	if (ret)
+		return ret;
+
 	return 0;
 
 out_pirq:
@@ -955,6 +1018,9 @@ void lan937x_teardown(struct dsa_switch *ds)
 
 		lan937x_girq_free(dev);
 	}
+
+	lan937x_devlink_exit(ds);
+	lan937x_ptp_deinit(dev);
 }
 
 void lan937x_switch_exit(struct ksz_device *dev)
diff --git a/drivers/net/dsa/microchip/lan937x_ptp.c b/drivers/net/dsa/microchip/lan937x_ptp.c
index 403b9d9aceff..2885d2f48e13 100644
--- a/drivers/net/dsa/microchip/lan937x_ptp.c
+++ b/drivers/net/dsa/microchip/lan937x_ptp.c
@@ -1065,6 +1065,8 @@ static int lan937x_ptp_port_init(struct ksz_device *dev, int port)
 	if (ret)
 		goto error_disable_ptp_int;
 
+	snprintf(prt->ptp_dev_name, sizeof(prt->ptp_dev_name), "PTP-%d", port);
+
 	return 0;
 
 error_disable_ptp_int:
diff --git a/drivers/net/dsa/microchip/lan937x_reg.h b/drivers/net/dsa/microchip/lan937x_reg.h
index 73e9c499c27d..5eb8825e0af4 100644
--- a/drivers/net/dsa/microchip/lan937x_reg.h
+++ b/drivers/net/dsa/microchip/lan937x_reg.h
@@ -359,6 +359,7 @@
 #define PORT_ACL_INT			BIT(0)
 
 #define PORT_SRC_PHY_INT		1
+#define PORT_SRC_PTP_INT		2
 
 #define REG_PORT_CTRL_0			0x0020
 
-- 
2.34.1

