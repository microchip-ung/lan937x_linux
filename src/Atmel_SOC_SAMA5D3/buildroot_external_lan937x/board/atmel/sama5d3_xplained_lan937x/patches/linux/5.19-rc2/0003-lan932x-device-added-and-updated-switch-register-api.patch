From a2605f7a725702af8d3ca40521a41aa4910f1694 Mon Sep 17 00:00:00 2001
From: Rakesh <rakesh.sankaranarayanan@microchip.com>
Date: Mon, 27 Jun 2022 19:50:17 +0530
Subject: [PATCH 3/4] lan932x device added and updated switch register api

---
 drivers/net/dsa/microchip/ksz_common.c   | 134 +++++++++++++++++++++++
 drivers/net/dsa/microchip/ksz_common.h   |  10 +-
 drivers/net/dsa/microchip/lan937x_main.c |   4 +-
 drivers/net/dsa/microchip/lan937x_spi.c  |  20 +++-
 4 files changed, 161 insertions(+), 7 deletions(-)

diff --git a/drivers/net/dsa/microchip/ksz_common.c b/drivers/net/dsa/microchip/ksz_common.c
index adb53ff70ff6..8b5e90cdd376 100644
--- a/drivers/net/dsa/microchip/ksz_common.c
+++ b/drivers/net/dsa/microchip/ksz_common.c
@@ -139,6 +139,64 @@ static const struct ksz_mib_names ksz9477_mib_names[] = {
 	{ 0x83, "tx_discards" },
 };
 
+static const struct ksz_mib_names ksz932x_mib_names[] = {
+	{ 0x00, "rx_hi" },
+	{ 0x01, "rx_undersize" },
+	{ 0x02, "rx_fragments" },
+	{ 0x03, "rx_oversize" },
+	{ 0x04, "rx_jabbers" },
+	{ 0x05, "rx_symbol_err" },
+	{ 0x06, "rx_crc_err" },
+	{ 0x07, "rx_align_err" },
+	{ 0x08, "rx_mac_ctrl" },
+	{ 0x09, "rx_pause" },
+	{ 0x0A, "rx_bcast" },
+	{ 0x0B, "rx_mcast" },
+	{ 0x0C, "rx_ucast" },
+	{ 0x0D, "rx_64_or_less" },
+	{ 0x0E, "rx_65_127" },
+	{ 0x0F, "rx_128_255" },
+	{ 0x10, "rx_256_511" },
+	{ 0x11, "rx_512_1023" },
+	{ 0x12, "rx_1024_1522" },
+	{ 0x13, "rx_1523_2000" },
+	{ 0x14, "rx_2001" },
+	{ 0x15, "tx_hi" },
+	{ 0x16, "tx_late_col" },
+	{ 0x17, "tx_pause" },
+	{ 0x18, "tx_bcast" },
+	{ 0x19, "tx_mcast" },
+	{ 0x1A, "tx_ucast" },
+	{ 0x1B, "tx_deferred" },
+	{ 0x1C, "tx_total_col" },
+	{ 0x1D, "tx_exc_col" },
+	{ 0x1E, "tx_single_col" },
+	{ 0x1F, "tx_mult_col" },
+	{ 0x80, "rx_total" },
+	{ 0x81, "tx_total" },
+	{ 0x82, "rx_discards" },
+	{ 0x83, "tx_discards" },
+	{ 0x84, "rx_bad_byte_cnt" },
+	{ 0x85, "tx_pkt_lnkerr_cnt" },
+	/* Port Queue Statistics */
+	{ 0x00, "fr_cnt_que0" },
+	{ 0x04, "fr_cnt_que1" },
+	{ 0x08, "fr_cnt_que2" },
+	{ 0x0C, "fr_cnt_que3" },
+	{ 0x10, "fr_cnt_que4" },
+	{ 0x14, "fr_cnt_que5" },
+	{ 0x18, "fr_cnt_que6" },
+	{ 0x1C, "fr_cnt_que7" },
+	{ 0x20, "byte_cnt_que0" },
+	{ 0x24, "byte_cnt_que1" },
+	{ 0x28, "byte_cnt_que2" },
+	{ 0x3C, "byte_cnt_que3" },
+	{ 0x30, "byte_cnt_que4" },
+	{ 0x34, "byte_cnt_que5" },
+	{ 0x38, "byte_cnt_que6" },
+	{ 0x3C, "byte_cnt_que7" },
+};
+
 const struct ksz_chip_data ksz_switch_chips[] = {
 	[KSZ8795] = {
 		.chip_id = KSZ8795_CHIP_ID,
@@ -403,6 +461,82 @@ const struct ksz_chip_data ksz_switch_chips[] = {
 		.internal_phy	= {true, true, true, true,
 				   false, false, true, true},
 	},
+
+	[LAN9321] = {
+		.chip_id = LAN9321_CHIP_ID,
+		.dev_name = "LAN9321",
+		.num_vlans = 4096,
+		.num_alus = 1024,
+		.num_statics = 256,
+		.cpu_ports = 0x08,	/* can be configured as cpu port */
+		.port_cnt = 5,		/* total physical port count */
+		.mib_names = ksz932x_mib_names,
+		.mib_cnt = ARRAY_SIZE(ksz932x_mib_names),
+		.reg_mib_cnt = MIB_COUNTER_NUM,
+		.supports_mii	= {false, false, false, true, true},
+		.supports_rmii	= {false, false, true, true, true},
+		.supports_rgmii = {false, false, false, true, true},
+		.internal_phy	= {true, true, false, false, false},
+	},
+
+	[LAN9322] = {
+		.chip_id = LAN9322_CHIP_ID,
+		.dev_name = "LAN9322",
+		.num_vlans = 4096,
+		.num_alus = 1024,
+		.num_statics = 256,
+		.cpu_ports = 0x08,	/* can be configured as cpu port */
+		.port_cnt = 5,		/* total physical port count */
+		.mib_names = ksz932x_mib_names,
+		.mib_cnt = ARRAY_SIZE(ksz932x_mib_names),
+		.reg_mib_cnt = MIB_COUNTER_NUM,
+		.supports_mii	= {false, false, false, true, true},
+		.supports_rmii	= {false, false, false, true, true},
+		.supports_rgmii = {false, false, false, true, true},
+		.internal_phy	= {false, false, false, false, false},
+	},
+
+	[LAN9325] = {
+		.chip_id = LAN9325_CHIP_ID,
+		.dev_name = "LAN9325",
+		.num_vlans = 4096,
+		.num_alus = 1024,
+		.num_statics = 256,
+		.cpu_ports = 0x80,	/* can be configured as cpu port */
+		.port_cnt = 8,		/* total physical port count */
+		.mib_names = ksz932x_mib_names,
+		.mib_cnt = ARRAY_SIZE(ksz932x_mib_names),
+		.reg_mib_cnt = MIB_COUNTER_NUM,
+		.supports_mii	= {false, false, false, true,
+				   true, false, true, true},
+		.supports_rmii	= {false, false, true, true,
+				   true, false, true, true},
+		.supports_rgmii = {false, false, false, true,
+				   true, false, true, true},
+		.internal_phy	= {true, true, false, false,
+				   false, false, false, false},
+	},
+
+	[LAN9326] = {
+		.chip_id = LAN9326_CHIP_ID,
+		.dev_name = "LAN9326",
+		.num_vlans = 4096,
+		.num_alus = 1024,
+		.num_statics = 256,
+		.cpu_ports = 0x80,	/* can be configured as cpu port */
+		.port_cnt = 8,		/* total physical port count */
+		.mib_names = ksz932x_mib_names,
+		.mib_cnt = ARRAY_SIZE(ksz932x_mib_names),
+		.reg_mib_cnt = MIB_COUNTER_NUM,
+		.supports_mii	= {false, false, false, true,
+				   true, false, true, true},
+		.supports_rmii	= {false, false, false, true,
+				   true, true, true, true},
+		.supports_rgmii = {false, false, false, true,
+				   true, false, true, true},
+		.internal_phy	= {false, false, false, false,
+				   false, false, false, false},
+	},
 };
 EXPORT_SYMBOL_GPL(ksz_switch_chips);
 
diff --git a/drivers/net/dsa/microchip/ksz_common.h b/drivers/net/dsa/microchip/ksz_common.h
index 36de77fa64a5..98ea87f45540 100644
--- a/drivers/net/dsa/microchip/ksz_common.h
+++ b/drivers/net/dsa/microchip/ksz_common.h
@@ -158,6 +158,10 @@ enum ksz_model {
 	LAN9372,
 	LAN9373,
 	LAN9374,
+	LAN9321,
+	LAN9322,
+	LAN9325,
+	LAN9326,
 };
 
 enum ksz_chip_id {
@@ -174,6 +178,10 @@ enum ksz_chip_id {
 	LAN9372_CHIP_ID = 0x00937200,
 	LAN9373_CHIP_ID = 0x00937300,
 	LAN9374_CHIP_ID = 0x00937400,
+	LAN9321_CHIP_ID = 0x00932100,
+	LAN9322_CHIP_ID = 0x00932200,
+	LAN9325_CHIP_ID = 0x00932500,
+	LAN9326_CHIP_ID = 0x00932600,
 };
 
 struct alu_struct {
@@ -230,7 +238,7 @@ void ksz_switch_remove(struct ksz_device *dev);
 
 int ksz8_switch_register(struct ksz_device *dev);
 int ksz9477_switch_register(struct ksz_device *dev);
-int lan937x_switch_register(struct ksz_device *dev);
+int lan93xx_switch_register(struct ksz_device *dev);
 
 int lan937x_check_device_id(struct ksz_device *dev);
 
diff --git a/drivers/net/dsa/microchip/lan937x_main.c b/drivers/net/dsa/microchip/lan937x_main.c
index d641b9d41676..e3efbba94a53 100644
--- a/drivers/net/dsa/microchip/lan937x_main.c
+++ b/drivers/net/dsa/microchip/lan937x_main.c
@@ -1577,11 +1577,11 @@ const struct dsa_switch_ops lan937x_switch_ops = {
 	.cls_flower_stats = lan937x_cls_flower_stats
 };
 
-int lan937x_switch_register(struct ksz_device *dev)
+int lan93xx_switch_register(struct ksz_device *dev)
 {
 	return ksz_switch_register(dev, &lan937x_dev_ops);
 }
-EXPORT_SYMBOL(lan937x_switch_register);
+EXPORT_SYMBOL(lan93xx_switch_register);
 
 MODULE_AUTHOR("Prasanna Vengateshan Varadharajan <Prasanna.Vengateshan@microchip.com>");
 MODULE_DESCRIPTION("Microchip LAN937x Series Switch DSA Driver");
diff --git a/drivers/net/dsa/microchip/lan937x_spi.c b/drivers/net/dsa/microchip/lan937x_spi.c
index 17afa9b09ecb..7418c4eca850 100644
--- a/drivers/net/dsa/microchip/lan937x_spi.c
+++ b/drivers/net/dsa/microchip/lan937x_spi.c
@@ -46,7 +46,7 @@ static int lan937x_spi_probe(struct spi_device *spi)
 
 	dev->irq = spi->irq;
 
-	ret = lan937x_switch_register(dev);
+	ret = lan93xx_switch_register(dev);
 	/* Main DSA driver may not be started yet. */
 	if (ret)
 		return ret;
@@ -76,7 +76,7 @@ static void lan937x_spi_shutdown(struct spi_device *spi)
 	spi_set_drvdata(spi, NULL);
 }
 
-static const struct of_device_id lan937x_dt_ids[] = {
+static const struct of_device_id lan93xx_dt_ids[] = {
 	{ .compatible = "microchip,lan9370",
 		.data = &ksz_switch_chips[LAN9370] },
 	{ .compatible = "microchip,lan9371",
@@ -87,9 +87,17 @@ static const struct of_device_id lan937x_dt_ids[] = {
 		.data = &ksz_switch_chips[LAN9373] },
 	{ .compatible = "microchip,lan9374",
 		.data = &ksz_switch_chips[LAN9374] },
+	{ .compatible = "microchip,lan9321",
+		.data = &ksz_switch_chips[LAN9321] },
+	{ .compatible = "microchip,lan9322",
+		.data = &ksz_switch_chips[LAN9322] },
+	{ .compatible = "microchip,lan9325",
+		.data = &ksz_switch_chips[LAN9325] },
+	{ .compatible = "microchip,lan9326",
+		.data = &ksz_switch_chips[LAN9326] },
 	{},
 };
-MODULE_DEVICE_TABLE(of, lan937x_dt_ids);
+MODULE_DEVICE_TABLE(of, lan93xx_dt_ids);
 
 static const struct spi_device_id lan937x_spi_ids[] = {
 	{ .name = "lan9370" },
@@ -97,6 +105,10 @@ static const struct spi_device_id lan937x_spi_ids[] = {
 	{ .name = "lan9372" },
 	{ .name = "lan9373" },
 	{ .name = "lan9374" },
+	{ .name = "lan9321" },
+	{ .name = "lan9322" },
+	{ .name = "lan9325" },
+	{ .name = "lan9326" },
 	{},
 };
 MODULE_DEVICE_TABLE(spi, lan937x_spi_ids);
@@ -105,7 +117,7 @@ static struct spi_driver lan937x_spi_driver = {
 	.driver = {
 		.name	= "lan937x-switch",
 		.owner	= THIS_MODULE,
-		.of_match_table = of_match_ptr(lan937x_dt_ids),
+		.of_match_table = of_match_ptr(lan93xx_dt_ids),
 	},
 	.probe	= lan937x_spi_probe,
 	.remove	= lan937x_spi_remove,
-- 
2.34.1

